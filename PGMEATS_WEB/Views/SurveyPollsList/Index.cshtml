
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12 col-md-12">
                <div class="jarviswidget jarviswidget-color-red" id="wid-id-1" data-widget-colorbutton="false"
                     data-widget-editbutton="false" data-widget-togglebutton="false" data-widget-deletebutton="false"
                     data-widget-custombutton="false" data-widget-collapsed="false" data-widget-sortable="false">
                    <header style="border-top-left-radius:8px; border-top-right-radius:8px">
                        <h2 style="font-family:'Poppins-Regular';font-weight:500;font-size:15px">
                            List Of Survey & Polls
                        </h2>
                    </header>

                    <div style="border-bottom-left-radius:8px; border-bottom-right-radius:8px">
                        <div class="table-toolbar" style="padding-bottom:10px">
                            <table>
                                <tr style="height:45px">
                                    <td width="150px">
                                        <p style="font-weight:600; margin: 0">Create Date</p>
                                    </td>

                                    <td>
                                        <input id="filterDatefrom" type="text" class="form-control input-md" style="background-color:white; width:150px" />
                                    </td>

                                    <td width="40px" style="text-align:center">
                                        <p style="font-weight:600; margin: 0">To</p>
                                    </td>

                                    <td>
                                        <input id="filterDateTo" type="text" class="form-control input-md" style="background-color:white; width:150px" />
                                    </td>
                                    <td></td>
                                </tr>

                                <tr style="height:45px">
                                    <td>
                                        <p style="font-weight:600; margin: 0">Group Department</p>
                                    </td>
                                    <td colspan="2">
                                        <select id="FilterGroupDepartment" class="form-control input-md" style="height:30px;"></select>
                                    </td>
                                    <td style="text-align: right">
                                        &nbsp;
                                    </td>
                                </tr>

                                <tr style="height:45px">
                                    <td width="120px">
                                        <p style="font-weight:600; margin: 0">Designation</p>
                                    </td>

                                    <td colspan="2">
                                        <select id="FilterDesignation" class="form-control input-md" style="height:30px; margin-right:20px"></select>
                                    </td>


                                    <td style="text-align: right">
                                        &nbsp;
                                    </td>
                                </tr>
                                <tr style="height:45px">
                                    <td width="120px">
                                        <p style="font-weight:600; margin: 0">Active Status</p>
                                    </td>

                                    <td colspan="2">
                                        <select id="FilterActiveStatus" class="form-control input-md" style="height:30px; margin-right:20px">
                                            <option value="ALL">ALL</option>
                                            <option value="1">Active</option>
                                            <option value="0">Inactive</option>
                                        </select>
                                    </td>


                                    <td style="text-align: right">
                                        <button class="btn btn-save" id="refresh"> Refresh </button>
                                    </td>
                                </tr>
                            </table>
                        </div>

                        <div style="padding: 5px 5px 5px 5px">
                            <table style="width: 100%;">
                                <tr style="height: 50px">
                                    <td>
                                        <button id="btnNew" class="btn borderradiusbtn" style="font-family: 'Poppins-Regular'; font-size: 15px; font-weight: 500; background-color: #4CBFBC; width:85px" data-toggle="modal" data-target="#myModal" onclick="AddNewData()"><span style="color:white">New</span></button>
                                    </td>
                                </tr>
                            </table>

                            <table id="tableID" class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th style="text-align: center;width: 12%">Action</th>
                                        <th style="text-align: center" class="hidden">
                                            Survey ID
                                        </th>
                                        <th style="text-align: center; width: 280px">
                                            Survey Title
                                        </th>
                                        <th style="text-align: center; width: 150px">
                                            Department
                                        </th>
                                        <th style="text-align: center; width: 150px">
                                            Designation
                                        </th>
                                        <th style="text-align: center; width: 120px">
                                            Start Date
                                        </th>
                                        <th style="text-align: center; width: 120px">
                                            End Date
                                        </th>
                                        <th style="text-align: center; width: 90px">
                                            Create Date
                                        </th>
                                    </tr>
                                </thead>
                            </table>

                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

<style type="text/css">
    .hidden {
        display: none;
    }

    .txtAlignCenter {
        text-align: center;
    }

    .txtAlignLeft {
        text-align: left;
    }

    .btn-save {
        color: #fff;
        background-color: #4CBFBC;
        border-color: #4CBFBC;
    }
</style>

<link rel="stylesheet" href="~/Content/zebra_datepicker.min.css" type="text/css">
<script src="~/Scripts/plugin/bootstrap-waitingfor/bootstrap-waitingfor.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/bootstrap/bootstrap.min.js"></script>
<script src="~/Scripts/zebra_datepicker.min.js"></script>
<script src="~/Scripts/zebra_datepicker.src.js"></script>
<script src="~/Scripts/plugin/summernote/summernote.min.js"></script>

@section pagespecific
{
    <script>
        var back;
        var stringBack = "@ViewBag.stringBack";
        $(document).ready(function () {
            FillCombo_FilterGroupDepartment();
            FillCombo_FilterDesignation();

            $('#filterDatefrom').Zebra_DatePicker({
                format: 'd M Y', //'d M || F Y'
                onSelect: function () {
                    $(this).change();
                }
            });

            $('#filterDateTo').Zebra_DatePicker({
                format: 'd M Y', //'d M || F Y'
                onSelect: function () {
                    $(this).change();
                }
            });

            var d = new Date();
            var month = new Array();
            month[0] = "Jan";
            month[1] = "Feb";
            month[2] = "Mar";
            month[3] = "Apr";
            month[4] = "May";
            month[5] = "Jun";
            month[6] = "Jul";
            month[7] = "Aug";
            month[8] = "Sep";
            month[9] = "Oct";
            month[10] = "Nov";
            month[11] = "Dec";

            var dd = String(d.getDate()).padStart(2, '0');
            var dmonth = month[d.getMonth()];
            var dyear = d.getFullYear();
            var today = dd + " " + dmonth + " " + dyear;
            var firstDay = "01 " + dmonth + " " + dyear;

            $("#filterDatefrom").val(firstDay)
            $("#filterDateTo").val(today)

            var responsiveHelper_dt_basic = undefined;
            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $("#tableID").dataTable({
                bDestroy: true,
                data: [],
                columns: [
                    {
                        "data": "Action", className: "txtAlignCenter", "render": function (data, type, row) {
                            if ('@ViewBag.AllowUpdate' == '0') {
                                return '<a href="#" class="fa fa-pencil disable"></a> &nbsp; | &nbsp; <a class="fa fa-trash-o disable"></a> &nbsp; | &nbsp; <a href="#" class="fa fa-bar-chart" onclick="Result(\'' + row.SurveyID + '\')"></a>'
                            } else {
                                return '<a href="#" class="fa fa-pencil" onclick="EditData(\'' + row.SurveyID + '\')"></a> &nbsp; | &nbsp; <a href="#" class="fa fa-trash-o" onclick="DeleteData(\'' + row.SurveyID + '\')"></a> &nbsp; | &nbsp; <a href="#" class="fa fa-bar-chart" onclick="Result(\'' + row.SurveyID + '\')"></a>'
                            }
                        }
                    },
                    { "data": "SurveyID",    className: "hidden" },
                    { "data": "SurveyTitle", className: "txtAlignLeft" },
                    { "data": "Department", className: "txtAlignLeft" },
                    { "data": "Designation", className: "txtAlignLeft" },
                    { "data": "StartDate",   className: "txtAlignCenter" },
                    { "data": "EndDate", className: "txtAlignCenter" },
                    { "data": "CreateDate", className: "txtAlignCenter" }
                ],
                rowCallback: function (row, data) { responsiveHelper_dt_basic.createExpandIcon(row) },
                filter: true,
                info: true,
                ordering: true,
                processing: true,
                retrieve: true,
                bLengthChange: false,
                lengthMenu: [[15, 20, -1], [15, 20, "All"]],
                searching: true,
                bFilter: true,
                bSort: true,
                bPaginate: true,
                //scrollX: false,
                scrollX: "100%",
                scrollY: "350px",
                autoWidth: true,
                preDrawCallback: function () {
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#tableID'), breakpointDefinition);
                    }
                },
                drawCallback: function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            
            loadData();


        })

        function loadData() {
            waitingDialog.show("Please wait retrieving data...");
            getUrlVars();
            if (back == "1") {
                if (stringBack != "") {
                    var pArray = stringBack.split("|");
                    var startDate = pArray[0];
                    var endDate = pArray[1];
                    var grDept = pArray[2];
                    var designat = pArray[3];
                    var activeStatus = pArray[4];
                    $("#filterDatefrom").val(startDate);
                    $("#filterDateTo").val(endDate);
                    $("#FilterGroupDepartment").val(grDept);
                    $("#FilterDesignation").val(designat);
                    $("#FilterActiveStatus").val(activeStatus);
                    stringBack = "";
                }
            }

            var fdatefrom = $("#filterDatefrom").val().split(' ');
            var fdateto = $("#filterDateTo").val().split(' ');
            var fgroupdept = $("#FilterGroupDepartment").val();
            var fdesignation = $("#FilterDesignation").val();
            var factivestatus = $("#FilterActiveStatus").val();

            if (fgroupdept == null) {
                fgroupdept = "ALL";
            }
            if (fdesignation == null) {
                fdesignation = "ALL";
            }
            if (factivestatus == null) {
                factivestatus = "ALL";
            }
            var months = {
                Jan: "01", Feb: "02", Mar: "03", Apr: "04", May: "05", Jun: "06",
                Jul: "07", Aug: "08", Sep: "09", Oct: "10", Nov: "11", Dec: "12"
            };

            fdatefrom = fdatefrom[2] + "-" + months[fdatefrom[1]] + "-" + fdatefrom[0]; //convert date to format "yyyy-mm-dd"
            fdateto = fdateto[2] + "-" + months[fdateto[1]] + "-" + fdateto[0];   //convert date to format "yyyy-mm-dd"

            var param = {
                StartDate: fdatefrom,
                EndDate: fdateto,
                Groupdepartment: fgroupdept,
                Designation: fdesignation,
                ActiveStatus: factivestatus
            }
            var pdata = { 'param': param }
            $.ajax({
                url: "@Url.Action("SurveyAndPolls", "SurveyPollsList")",
                type: "post",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(pdata),
            }).done(function (result) {
                $("#tableID").DataTable().clear();

                if (result.ID == '0') {
                    toastr.error(result.Message, 'Error', { timeOut: 3000, "closeButton": true });
                }
                else {

                    if (result.Contents.length == 0) {
                        toastr.warning('Data not found', 'Warning', { timeOut: 3000, "closeButton": true });
                    }
                    $("#tableID").DataTable().rows.add(result.Contents).draw(false);
                }

                setTimeout(function () {
                    waitingDialog.hide();
                }, 1000);


            }).fail(function (jqXHR, textStatus, errorThrown) {
                //toastr.error(jqXHR.status + " : " + jqXHR.responseText, 'Error', { timeOut: 3000, "closeButton": true });
                setTimeout(function () {
                    waitingDialog.hide();
                }, 1000);
            });

        }

        function AddNewData() {
            var url = "/SurveyPollsList/Create";
            //var url = "/MyPGM_Web/SurveyPollsList/Create";
            window.location.href = url;
        };
        function EditData(id) {
            var url = "/SurveyPollsList/Update?id=" + id;
            //var url = "/MyPGM_Web/SurveyPollsList/Update?id=" + id;
            window.location.href = url;
        }
        function Result(id) {
            var url = "/SurveyPollsList/Result?id=" + id;
            //var url = "/MyPGM_Web/SurveyPollsList/Result?id=" + id;
            window.location.href = url;
        }
        function DeleteData(id) {
            $.ajax({
                url: "@Url.Action("DeleteSurvey", "SurveyPollsList")",
                type: "post",
                dataType: "json",
                data: { param: id },
            }).done(function (result) {
                if (result.ID == '0') {
                    toastr.error(result.Message, 'Error', { timeOut: 3000, "closeButton": true });
                }
                else {
                    toastr.success(result.Message, 'Succes', { timeOut: 3000, "closeButton": true });
                    loadData();
                }

                setTimeout(function () {
                    waitingDialog.hide();
                }, 1000);

            }).fail(function (jqXHR, textStatus, errorThrown) {
                setTimeout(function () {
                    waitingDialog.hide();
                }, 1000);
            });
        }

        function FillCombo_FilterGroupDepartment()
        {
            $.ajax({
                type: "POST",
                url: "@Url.Action("FillCombo", "SurveyPollsList")", // "/MyComplaint/FillCombo/",
                datatype: 'json',
                data: { Type: "0" },
                success: function (result)
                {
                    if (result.ID == '0') {
                        toastr.warning(result.Message, 'Warning', { timeOut: 3000, closeButton: true, positionClass: "toast-top-full-width" });
                    } else
                    {
                        $('#FilterGroupDepartment').empty();
                        $.each(result.Contents, function (i, dt)
                        {
                            $("#FilterGroupDepartment").append('<option value="' + dt.Code + '">' + dt.Description + '</option>');
                        });
                    }
                },
                error: function (ex)
                {
                    toastr.error(ex, 'Failed', { timeOut: 1000, "closeButton": true });
                }
            });
        }

        function FillCombo_FilterDesignation()
        {
            $.ajax({
                type: "POST",
                url: "@Url.Action("FillCombo", "SurveyPollsList")", // "/MyComplaint/FillCombo/",
                datatype: 'json',
                data: { Type: "1" },
                success: function (result)
                {
                    if (result.ID == '0') {
                        toastr.warning(result.Message, 'Warning', { timeOut: 3000, closeButton: true, positionClass: "toast-top-full-width" });
                    } else
                    {
                        $('#FilterDesignation').empty();
                        $.each(result.Contents, function (i, dt)
                        {
                            $("#FilterDesignation").append('<option value="' + dt.Code + '">' + dt.Description + '</option>');
                        });
                    }
                },
                error: function (ex)
                {
                    toastr.error(ex, 'Failed', { timeOut: 1000, "closeButton": true });
                }
            });
        }

        $("#refresh").click(function () {
            loadData();
        })

        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            back = vars.back;
        }
    </script> 
}