@model PGMEATS_WEB.Models.clsMyComplaint
@{
    ViewBag.Title = "CanteenComplaintList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="content">
    <section id="widget-grid" class="">
        <div class="row">
            <article class="col-xs-12 col-md-12">
                <div class="jarviswidget jarviswidget-color-red" id="wid-id-1"
                     data-widget-colorbutton="false"
                     data-widget-editbutton="false"
                     data-widget-togglebutton="false"
                     data-widget-deletebutton="false"
                     data-widget-custombutton="false"
                     data-widget-collapsed="false"
                     data-widget-sortable="false">

                    <header style="border-top-left-radius:8px; border-top-right-radius:8px">
                        <h2 style="font-family:'Poppins';font-weight:500;font-size:13px">List of Feedback</h2>
                    </header>

                    <div style="border-bottom-left-radius:8px; border-bottom-right-radius:8px">
                        <div class="widget-body">
                            <div class="table-toolbar" style="padding-bottom:10px">
                                <table>
                                    <tr style="height:45px">
                                        <td width="100px">
                                            <p style="font-weight:600; margin-right:20px">Date</p>
                                        </td>
                                        <td>
                                            <input id="fromDate" type="text" class="form-control input-md" style="background-color:white; width:150px" />
                                        </td>
                                        <td width="40px" style="text-align:center">
                                            <p style="font-weight:600">To</p>
                                        </td>
                                        <td>
                                            <input id="toDate" type="text" class="form-control input-md" style="background-color:white; width:150px" />
                                        </td>
                                        <td width="120px">
                                            <p style="font-weight:600; margin-left:20px">Issue Type</p>
                                        </td>
                                        <td>
                                            <select id="IssueTypeID" class="form-control input-md" style="height:30px; width:200px; margin-right:20px"></select>
                                        </td>
                                        <td>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <p style="font-weight:600">Department</p>
                                        </td>
                                        <td colspan="3">
                                            <select id="Department" class="form-control input-md" style="height:30px; width:340px;"></select>
                                        </td>
                                        <td>
                                            <p style="font-weight: 600; margin-left: 20px">Status</p>
                                        </td>
                                        <td>
                                            <select id="ComplaintStatus" class="form-control input-md" style="height: 30px; width: 200px; margin-right: 20px"></select>
                                        </td>
                                        <td>
                                            <button class="btn btn-save" id="refresh"> Refresh </button>
                                        </td>
                                        @*<td>&nbsp;</td>
                                        <td>
                                            <button class="btn btn-save" id="SettingCaterer" disabled="disabled"> Past to Caterer </button>
                                        </td>*@
                                    </tr>
                                </table>
                            </div>

                            <table id="tableID" data-page-size='3' class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr role="row">
                                        @*<th style="text-align:center;width:30px;">
                                                <input name="select-all" id="select-all" type="checkbox" />
                                            </th>*@
                                        <th style="text-align:center;width:50px;">
                                            Action
                                        </th>
                                        <th style="text-align: center; width: 100px;">
                                            Date
                                        </th>
                                        <th style="text-align: center; width: 100px;">
                                            Department
                                        </th>
                                        <th style="text-align: center; width: 100px;">
                                            IssueType
                                        </th>
                                        <th style="text-align: center; width: 300px;">
                                            Description
                                        </th>
                                        <th style="text-align: center; width: 150px;">
                                            CatererID
                                        </th>
                                        <th style="text-align: center; width: 50px;">
                                            Evindence
                                        </th>
                                        <th style="text-align: center; width: 100px;">
                                            Created By
                                        </th>
                                        <th style="text-align: center; width: 80px">
                                            Status
                                        </th>
                                        <th style="text-align: center; width: 300px;">
                                            Response
                                        </th>
                                        <th style="text-align: center; width: 100px;">
                                            Create Response
                                        </th>
                                        <th style="text-align: center; width: 100px;">
                                            Last User
                                        </th>
                                        <th style="text-align: center; width: 150px;">
                                            Last Update
                                        </th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>

                            <div class="modal fade" id="MyModal">
                                <div class="modal-dialog" style="width:400px">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <a href="#" class="close" data-dismiss="modal">&times;</a>
                                            <h4 style="font-family:'Poppins'" id="ModalTitle"></h4>
                                        </div>
                                        <div style="padding-left:20px; padding-right:20px">
                                            <form id="form" class="smart-form">
                                                <fieldset id="SubmitForm">
                                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                    <table style="border:0px solid black; width:100%">
                                                        <tr>
                                                            <td>
                                                                <div class="form-group ">
                                                                    <label style="font-weight:500; margin-bottom:0.5em;">Date</label>
                                                                    @Html.TextBoxFor(m => m.CreatedDate, new { @id = "CreatedDate", @class = "form-control input-md", @style = "height:20px; width:300px;", disabled = "disabled" })
                                                                    @Html.HiddenFor(m => m.ComplaintID, new { @id = "ComplaintID" })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <div class="form-group ">
                                                                    <label style="font-weight:500; margin-bottom:0.5em;">Department</label>
                                                                    @Html.TextBoxFor(m => m.Department, new { @id = "DepartmentDet", @class = "form-control input-md", @style = "height:20px; width:300px;", disabled = "disabled" })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <div class="form-group ">
                                                                    <label style="font-weight:500; margin-bottom:0.5em;">Issue Type</label>
                                                                    @Html.TextBoxFor(m => m.IssueTypeDesc, new { @id = "IssueTypeDesc", @class = "form-control input-md", @style = "height:20px; width:300px;", disabled = "disabled", })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <div class="form-group ">
                                                                    <label style="font-weight:500; margin-bottom:0.5em;">Description</label>
                                                                    @Html.TextAreaFor(m => m.ComplaintDesc, new { @id = "ComplaintDesc", @class = "form-control input-md", @style = "height:100px; width:300px;", disabled = "disabled" })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <div class="form-group ">
                                                                    <label style="font-weight:500; margin-bottom:0.5em;">Created By</label>
                                                                    @Html.TextBoxFor(m => m.CreatedUser, new { @id = "CreatedUser", @class = "form-control input-md", @style = "height:20px; width:300px;", disabled = "disabled" })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <div class="form-group">
                                                                    <label style="font-weight:500; margin-bottom:0.5em;">Caterer ID</label>
                                                                    <div style="display:flex">
                                                                        <select id="txtCatererID" class="form-control input-md" style="height:30px; width:200px; margin-right:20px" disabled="disabled"></select>
                                                                      @*  <button id="btnclearcatererID" style="border-color:transparent; background-color:transparent; font-size:30px"  class="fa fa-close" ></button>*@
                                                                    </div>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <div class="form-group ">
                                                                    <label style="font-weight:500; margin-bottom:0.5em;"> Response </label>
                                                                    @Html.TextAreaFor(m => m.ComplaintReply, new { @id = "ComplaintReplyDet", @class = "form-control input-md", @placeholder = "Enter your response", @style = "height:100px; width:300px;" })
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </fieldset>
                                            </form>
                                        </div>

                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal" style="width:85px; font-size:13px; border-width:thin;" onclick="">Cancel</button>
                                            @if (ViewBag.AllowWrite == "0")
                                            {
                                                <button type="button" class="btn btn-save" id="InsertData" style="width:85px; font-size:13px" disabled>Save</button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-save" id="InsertData" style="width:85px; font-size:13px;">Save</button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="modal fade" id="DeleteConfirmation">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <a href="#" class="close" data-dismiss="modal">&times;</a>
                                            <h4 style="font-family:'Poppins'">Delete Data Complaint</h4>
                                        </div>
                                        <div class="modal-body">
                                            <h4 style="font-family:'Poppins'">Are you sure to delete this data?</h4>
                                        </div>
                                        <div class="modal-footer">
                                            <a href="#" class="btn btn-save" style="width:85px; font-size:13px" id="DeleteData">Confirm</a>
                                            <a href="#" class="btn btn-default" style="width: 85px; font-size: 13px; border-width: thin;" data-dismiss="modal" id="DeleteCancel">Cancel</a>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="modal fade" id="ShowImg">
                                <div class="modal-dialog" style="width:360px;">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <a href="#" class="close" data-dismiss="modal">&times;</a>
                                        </div>
                                        <div class="modal-body" style="display:flex; justify-content:center">
                                            <img src="#" alt=Evidence id="EvidenceShow" style="height: 300px; width: 300px; max-width: 300%; max-height: 100%; object-fit: cover;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </section>
</div>

<style type="text/css">
    a.disable {
        cursor: not-allowed;
    }

    .hidden {
        display: none;
    }

    .txtAlignCenter {
        text-align: center;
    }

    .txtAlignLeft {
        text-align: left;
    }

    .txtAlignRight {
        text-align: right;
    }

    .btn-save {
        color: #fff;
        background-color: #4CBFBC;
        border-color: #4CBFBC;
    }

    .hidden {
        display: none;
    }
</style>

<link rel="stylesheet" href="~/Content/zebra_datepicker.min.css" type="text/css">
<script src="~/Scripts/plugin/bootstrap-waitingfor/bootstrap-waitingfor.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/bootstrap/bootstrap.min.js"></script>
<script src="~/Scripts/zebra_datepicker.min.js"></script>
<script src="~/Scripts/zebra_datepicker.src.js"></script>

<script type="text/javascript">
    var oTable;
    var UserID = '@ViewBag.UserID';
    var AdminStatus = '@ViewBag.AdminStatus';
    var UserType = '@ViewBag.UserType';
    $(document).ready(function () {
      
        FillCombo_Department(UserID);
        FillCombo_ComplaintStatus()
        FillCombo_IssueType()

        $("#fromDate").val(today)
        $("#toDate").val(today)

        //millisecondsToWait = 1500;
        //setTimeout(function () {
        //    loadData(); //Get list complaint
        //}, millisecondsToWait);

        /* BASIC ;*/
        var responsiveHelper_dt_basic = undefined;
        var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

       oTable = $("#tableID").dataTable({
            bDestroy: true,
            data: [],
            columns: [
                //{/
                //    "data": "Action", className: "txtAlignCenter", "render": function (data, type, row, meta) {
                //        return '<input type="checkbox" id="check-'+meta.row+'" />';
                //    }
                //},
                {
                    "data": "Action", className: "txtAlignCenter", "render": function (data, type, row) {
                        //return '<a href="#" class="fa fa-pencil" onclick="ReplyComplaint(\'' + row.ComplaintID + '\',\'' + row.CreatedDate + '\',\'' + row.Department + '\',\'' + row.IssueTypeDesc + '\',\'' + row.ComplaintDesc.replace(/\n|<br\s*\/?>/gi, "") + '\',\'' + row.CreatedUser + '\')"></a> &nbsp; | &nbsp; <a href="#" class="fa fa-trash-o" onclick="DeleteComplaint(\'' + row.ComplaintID + '\')"></a>'
                        return '<a href="#" class="fa fa-pencil" onclick="ReplyComplaint(\'' + row.ComplaintID + '\')"></a> &nbsp; | &nbsp; <a href="#" class="fa fa-trash-o" onclick="DeleteComplaint(\'' + row.ComplaintID + '\')"></a>'
                    }
                },
               //{ "data": "ComplaintID", "autoWidth": true, width: 0, className: "txtAlignCenter hidden"},
                { "data": "CreatedDate", "autoWidth": true, className: "txtAlignCenter" },
                { "data": "Department", "autoWidth": true, className: "txtAlignCenter" },
                { "data": "IssueTypeDesc", "autoWidth": true, className: "txtAlignCenter" },
                { "data": "ComplaintDesc", "autoWidth": true, className: "txtAlignLeft" },
                { "data": "CatererID", "autoWidth": true, className: "txtAlignLeft" },
                {
                    "data": "FileName", className: "txtAlignCenter", "render": function (data, type, row) {
                        return '<a href="#" onclick="ImgShow(\'' + row.Evidence + '\')">Show Evidence</a>'
                    }
                },
                { "data": "CreatedUser", "autoWidth": true, className: "txtAlignCenter" },
                { "data": "ReplyStatus", "autoWidth": true, className: "txtAlignCenter" },
                { "data": "ComplaintReply", "autoWidth": true, className: "txtAlignLeft" },
                { "data": "LastUser", "autoWidth": true, className: "txtAlignCenter" },
                { "data": "LastUser", "autoWidth": true, className: "txtAlignCenter" },
                { "data": "LastUpdate", "autoWidth": true, className: "txtAlignCenter" },
            ],
            //columnDefs: [{
            //    'targets': [2],
            //    'searchable': false,
            //    'orderable': false,
            //    'className': 'dt-body-center',
            //    "mRender": function (data, type, full, meta) {
            //        return '<select id="CatererID-' + meta.row +'" class="form-control selectpicker" style="height:40px; width:150px" disabled="disabled"/>';
            //    }
            //}],
            rowCallback: function (row, data) { responsiveHelper_dt_basic.createExpandIcon(row) },
            filter: true,
            info: true,
            ordering: true,
            processing: true,
            retrieve: true,
            bLengthChange: false,
            lengthMenu: [[15, 20, -1], [15, 20, "All"]],
            bFilter: true,
            bSort: true,
            bPaginate: true,
            scrollX: false,
            //scrollX: "100%",
            //scrollY: "350px",
            autoWidth: true,
            preDrawCallback: function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_dt_basic) {
                    responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#tableID'), breakpointDefinition);
                }
            },
            drawCallback: function (oSettings) {
                responsiveHelper_dt_basic.respond();
            }
        });
    });

    function loadData() {
        var department = $("#Department").val();
        var issuetypeID = $("#IssueTypeID").val();
        var complaintStatus = $("#ComplaintStatus").val();

        var months = {
            Jan: "01", Feb: "02", Mar: "03", Apr: "04", May: "05", Jun: "06",
            Jul: "07", Aug: "08", Sep: "09", Oct: "10", Nov: "11", Dec: "12"
        };

        var pfromDate = $("#fromDate").val().split(' ');
        var fromDate = pfromDate[2] + "-" + months[pfromDate[1]] + "-" + pfromDate[0]; //convert date to format "yyyy-mm-dd"

        var ptoDate = $("#toDate").val().split(' ');
        var toDate = ptoDate[2] + "-" + months[ptoDate[1]] + "-" + ptoDate[0]; //convert date to format "yyyy-mm-dd"

        var formdata = new FormData();
        formdata.append("FromDate", fromDate);
        formdata.append("toDate", toDate);
        formdata.append("Department", department);
        formdata.append("IssueTypeID", issuetypeID);
        formdata.append("ComplaintStatus", complaintStatus);
        formdata.append("UserID", UserID);

        waitingDialog.show("Please wait retrieving data...");
        $.ajax({
            type: "POST",
            url: "@Url.Action("ReplyComplaintList", "MyComplaint")", //"/MyComplaint/ReplyComplaintList/",
            contentType: false,
            processData: false,
            data: formdata,
            success: function (result) {
                if (result.Message.toLowerCase().includes("success")) {
                    $("#tableID").DataTable().clear();
                    $("#tableID").DataTable().rows.add(result.Contents).draw(false)
                    setTimeout(function () {
                        waitingDialog.hide();
                    }, 500);
                }
                else {
                    toastr.warning(result.Message, 'Warning', { timeOut: 1000, closeButton: true });
                    setTimeout(function () {
                        waitingDialog.hide();
                    }, 1000);
                }
            },
            error: function (ex) {
                toastr.error(ex, 'Failed', { timeOut: 1000, "closeButton": true });
                setTimeout(function () {
                    waitingDialog.hide();
                }, 500);
            }
        });
    }

    $('#fromDate').Zebra_DatePicker({
        format: 'd M Y', //'d M Y'
        onSelect: function () {
            $(this).change();
        }
    });

    $('#toDate').Zebra_DatePicker({
        format: 'd M Y', //'d M Y'
        onSelect: function () {
            $(this).change();
        }
    });

    var d = new Date();
    var month = new Array();
    month[0] = "Jan";
    month[1] = "Feb";
    month[2] = "Mar";
    month[3] = "Apr";
    month[4] = "May";
    month[5] = "Jun";
    month[6] = "Jul";
    month[7] = "Aug";
    month[8] = "Sep";
    month[9] = "Oct";
    month[10] = "Nov";
    month[11] = "Dec";

    var dd = String(d.getDate()).padStart(2, '0');
    var dmonth = month[d.getMonth()];
    var dyear = d.getFullYear()
    var today = dd + " " + dmonth + " " + dyear


    $("#refresh").click(function () {
        loadData();
    })

    function ReplyComplaint(complaintID) {
        console.log(complaintID);
        $.ajax({
            type: "POST",
            url: "@Url.Action("ReplyComplaintSel", "MyComplaint")", //"/MyComplaint/ReplyComplaintUpd/",
            datatype: 'json',
            data: {ComplaintID : complaintID},
                success: function (result) {
                    if (result.Message.toLowerCase().includes("success")) {
                        console.log(result.Contents);
                        clearTextBox();
                        $("#ModalTitle").html("Response Feedback");
                        $("#MyModal").modal();
                        $("#CreatedDate").val(result.Contents.CreatedDate);
                        $("#ComplaintID").val(complaintID);
                        $("#DepartmentDet").val(result.Contents.Department);
                        $("#IssueTypeDesc").val(result.Contents.IssueTypeDesc);
                        $("#ComplaintDesc").val(result.Contents.ComplaintDesc);
                        $("#ComplaintReplyDet").val(result.Contents.ComplaintReply);
                        $("#CreatedUser").val(result.Contents.CreatedUser);
                        FillCombo_CatererID(result.Contents.CatererID)

                        if ((AdminStatus == "1" || UserType.trim() == "Admin") && result.Contents.ComplaintReply == "" ) {
                            $("#txtCatererID").removeAttr("disabled", "disabled");
                        } else {
                            $("#txtCatererID").attr("disabled", "disabled");
                        }

                        if (result.Contents.CatererID != "") {
                            $("#ComplaintReplyDet").attr("disabled", "disabled");
                        } else {
                            $("#ComplaintReplyDet").removeAttr("disabled", "disabled");
                        }


                    }
                    else {
                        toastr.warning(result.Message, 'Warning', { timeOut: 1000, closeButton: true });
                    }
                },
                error: function (ex) {
                    toastr.error(ex, 'Failed', { timeOut: 1000, "closeButton": true });
                }
            });
        //console.log(data);
        //var complaintID = data.split('|')[0];
        //var createdDate = data.split('|')[1];
        //var department = data.split('|')[2];
        //var issuetypeDesc = data.split('|')[3];
        //var complaintDesc = data.split('|')[4];
        //var createdUser = data.split('|')[5];
    }

    $("#InsertData").click(function () {
        var complaintID = $("#ComplaintID").val();
        var complaintReply = $("#ComplaintReplyDet").val();
        var catererID = $("#txtCatererID").val();

        //if (complaintReply == "") {
        //    toastr.warning("Please, enter your response!", 'Warning', { timeOut: 1000, closeButton: true });
        //} else {
            var formdata = new FormData();
            formdata.append("ComplaintID", complaintID);
            formdata.append("ComplaintReply", complaintReply);
            formdata.append("CatererID", catererID);

            $.ajax({
                type: "POST",
                url: "@Url.Action("ReplyComplaintUpd", "MyComplaint")", //"/MyComplaint/ReplyComplaintUpd/",
                contentType: false,
                processData: false,
                data: formdata,
                success: function (result) {
                    if (result.Message.toLowerCase().includes("success")) {
                        toastr.success(result.Message, 'Success', { timeOut: 1000, closeButton: true });
                        $('#MyModal').modal('hide');
                        millisecondsToWait = 500;
                        setTimeout(function () {
                            loadData();
                        }, millisecondsToWait);
                    }
                    else {
                        toastr.warning(result.Message, 'Warning', { timeOut: 1000, closeButton: true });
                    }
                },
                error: function (ex) {
                    toastr.error(ex, 'Failed', { timeOut: 1000, "closeButton": true });
                }
            });
     /*   }*/
    })

    function DeleteComplaint(data) {
        $("#ComplaintID").val(data);
        $("#DeleteConfirmation").modal("show");
    }

    $("#DeleteData").click(function () {
        var complaintID = $("#ComplaintID").val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("ReplyComplaintDel", "MyComplaint")", // "/MyComplaint/ReplyComplaintDel/",
            datatype: 'json',
            data: { ComplaintID: complaintID },
            success: function (result) {
                if (result.Message.toLowerCase().includes("success")) {
                    toastr.success(result.Message, 'Success', { timeOut: 1000, closeButton: true });
                    $('#DeleteConfirmation').modal('hide');
                    setTimeout(function () {
                        window.location.reload(true);
                    }, 500);
                } else {
                    toastr.warning(result.Message, 'Warning', { timeOut: 1000, closeButton: true });
                }
            },
            error: function (ex) {
                toastr.error(ex, 'Failed', { timeOut: 1000, "closeButton": true });
            }
        });
    })

    function FillCombo_Department(UserID) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetFillCombo", "MyComplaint")", // "/MyComplaint/FillCombo/",
            datatype: 'json',
            data: { TypeAction: "05", Param: UserID },
            success: function (result) {
                if (result.Message.toLowerCase().includes("success")) {
                    $('#Department').empty();
                    $.each(result.Content, function (i, dt) {
                        $("#Department").append('<option value="' + dt.Code + '">' + dt.CodeDesc + '</option>');
                    });
                } else {
                    toastr.warning(result.Message, 'Warning', { timeOut: 1000, closeButton: true });
                }
            },
            error: function (ex) {
                toastr.error(ex, 'Failed', { timeOut: 1000, "closeButton": true });
            }
        });
    }

    function FillCombo_IssueType() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("FillCombo", "MyComplaint")", // "/MyComplaint/FillCombo/",
            datatype: 'json',
            data: { Type: "IssueType_Web" },
            success: function (result) {
                if (result.Message.toLowerCase().includes("success")) {
                    $('#IssueTypeID').empty();
                    $.each(result.Contents, function (i, dt) {
                        $("#IssueTypeID").append('<option value="' + dt.Code + '">' + dt.Description + '</option>');
                    });
                } else {
                    toastr.warning(result.Message, 'Warning', { timeOut: 1000, closeButton: true });
                }
            },
            error: function (ex) {
                toastr.error(ex, 'Failed', { timeOut: 1000, "closeButton": true });
            }
        });
    }

    function FillCombo_ComplaintStatus() {
        $.ajax({
            type: "POST",
            url:  "@Url.Action("FillCombo", "MyComplaint")", // "/MyComplaint/FillCombo/",
            datatype: 'json',
            data: { Type: "StatusComplaint" },
            success: function (result) {
                if (result.Message.toLowerCase().includes("success")) {
                    $('#ComplaintStatus').empty();
                    $.each(result.Contents, function (i, dt) {
                        $("#ComplaintStatus").append('<option value="' + dt.Code + '">' + dt.Description + '</option>');
                    });
                } else {
                    toastr.warning(result.Message, 'Warning', { timeOut: 1000, closeButton: true });
                }
            },
            error: function (ex) {
                toastr.error(ex, 'Failed', { timeOut: 1000, "closeButton": true });
            }
        });
    }

    function FillCombo_CatererID(CatererID) {
        $.ajax({
            type: "POST",
            url:  "@Url.Action("GetFillCombo", "MyComplaint")", // "/MyComplaint/FillCombo/",
            datatype: 'json',
            data: { TypeAction: "04", Param : "" },
            success: function (result) {
                if (result.Message.toLowerCase().includes("success")) {
                    $('#txtCatererID').empty();
                    $('#txtCatererID').append('<option value="" selected>Fill CatererID</option>');
                    $.each(result.Content, function (i, dt) {
                        if (dt.Code == CatererID) {
                            $('#txtCatererID').append('<option value="' + dt.Code + '" selected>' + dt.CodeDesc + '</option>');
                        } else {
                            $('#txtCatererID').append('<option value="' + dt.Code + '">' + dt.CodeDesc + '</option>');
                        }

                    });
                } else {
                    toastr.warning(result.Message, 'Warning', { timeOut: 1000, closeButton: true });
                }
            },
            error: function (ex) {
                toastr.error(ex, 'Failed', { timeOut: 1000, "closeButton": true });
            }
        });
    }

    //$("#btnclearcatererID").click(function () {
    //    $('#txtCatererID').empty();
    //    $("#txtCatererID").append('<option value disabled selected>Fill CatererID</option>');
    //    $('#txtCatererID').val("");
    //    FillCombo_CatererID("");
    //})

    @*function FillCombo_CatererID(cbCatererID, CatererID) {
        $.ajax({
            type: "POST",
            url:  "@Url.Action("FillCombo_CatererID", "MyComplaint")", // "/MyComplaint/FillCombo/",
            datatype: 'json',
            data: { TypeAction: "04" },
            success: function (result) {
                if (result.Message.toLowerCase().includes("success")) {
                    $('#' + cbCatererID + '').empty();
                    $('#' + cbCatererID + '').append('<option value="" disabled selected>Fill CatererID</option>');
                    $.each(result.Content, function (i, dt) {
                        if (dt.CodeDesc == CatererID) {
                            $('#' + cbCatererID + '').append('<option value="' + dt.Code + '" selected>' + dt.CodeDesc + '</option>');
                        } else {
                            $('#' + cbCatererID + '').append('<option value="' + dt.Code + '">' + dt.CodeDesc + '</option>');
                        }

                    });
                } else {
                    toastr.warning(result.Message, 'Warning', { timeOut: 1000, closeButton: true });
                }
            },
            error: function (ex) {
                toastr.error(ex, 'Failed', { timeOut: 1000, "closeButton": true });
            }
        });
    }*@

    function clearTextBox() {
        $("#CreatedDate").val('');
        $("#DepartmentDet").val('');
        $("#IssueTypeDesc").val('');
        $("#ComplaintDesc").val('');
        $("#CreatedUser").val('');
        $("#ComplaintReply").val('');
        $("#ComplaintReplyDet").removeAttr("disabled", "disabled");
    }

    function ImgShow(data) {
        var FileName = data.split('|')[0];

        $("#ShowImg").modal();
        var path = "/Image/MyComplaint/" + FileName;
        document.getElementById('EvidenceShow').src = path;
    }
    $("#txtCatererID").click(function () {
        var catererID = $(this).val();
        if (catererID != '') {
            $("#ComplaintReplyDet").attr("disabled", "disabled");
        }
        else {
            $("#ComplaintReplyDet").removeAttr("disabled", "disabled");
        }      
    })

    //$("#txtCatererID").change(function () {
    //    $("#ComplaintReplyDet").attr("disabled", "disabled");
    //})

    @*var totlenght = 0;
    $('#tableID tbody').on('change', 'input:checkbox[id^="check"]', function () {
        var tables = $("#tableID").dataTable();
        var indexOfRow = tables.fnGetPosition($(this).closest('tr').get(0));
        if (document.getElementById('check-' + indexOfRow).checked) {
            $("#CatererID-" + indexOfRow).removeAttr("disabled", "disabled");
            totlenght = totlenght + 1;
        } else {
            $("#CatererID-" + indexOfRow).attr("disabled", "disabled");
            totlenght = totlenght - 1;
        }

        if (totlenght > 0) {
            $("#SettingCaterer").removeAttr("disabled", "disabled");
        } else {
            $("#SettingCaterer").attr("disabled", "disabled");
        }
    });

    $('#select-all').on('click', function () {
        $('input:checkbox[id^="check"]', rows).prop('checked', this.checked);
        var tables = $("#tableID").dataTable();
        var rows = tables.fnGetNodes();
        for (var iRow = 0; iRow < rows.length; iRow++) {
            if (document.getElementById('check-' + iRow).checked) {
                $("#CatererID-" + iRow).removeAttr("disabled", "disabled");
                totlenght = totlenght + 1;
            } else {
                $("#CatererID-" + iRow).attr("disabled", "disabled");
                totlenght = totlenght - 1;
            }
        }
        if (totlenght > 0) {
            $("#SettingCaterer").removeAttr("disabled", "disabled");
        } else {
            $("#SettingCaterer").attr("disabled", "disabled");
        }
    });

    $("#SettingCaterer").click(function () {
        var msg = "";
        var orderArr = [];
        orderArr.length = 0;

        $.each($("#tableID tbody tr"), function () {
            if ($(this).find('input:eq(0)').prop('checked') == true) {
                var complaintID = $(this).find('td:eq(3)').text();
                var catererID = $(this).find('td:eq(2)  :selected').val() ? $(this).find('td:eq(2)  :selected').val() : "";
                if (catererID == "") {
                    return msg = "Please, fill catererID!";
                }
                orderArr.push({
                    CatererID: catererID,
                    ComplaintID: complaintID
                });
            }
        });

        if (msg != "") {
            toastr.warning(msg, 'Warning', { timeOut: 1000, "closeButton": true });
            return
        }


        if (orderArr.length <= 0) {
            toastr.warning("Please, select one of feedback list!" , 'Warning', { timeOut: 1000, "closeButton": true });
            return
        }

        $.ajax({
            type: "POST",
            url: "@Url.Action("SettingCaterer", "MyComplaint")",
            data: JSON.stringify(orderArr),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.Message.toLowerCase().includes("success")) {
                    loadData();
                    return toastr.success("Pass to caterer successfully !", 'Success', { timeOut: 1000, "closeButton": true });
                } else {
                    return toastr.warning(result.Message, 'warning', { timeOut: 3000, "closeButton": true });
                }
            },
            error: function (ex) {
                return toastr.warning('Error connection API' + ex, 'Warning', { timeOut: 3000, "closeButton": true });
            }
        });

    })*@

</script>
